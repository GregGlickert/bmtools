import click
import logging
import os
import questionary

from clint.textui import puts, colored, indent

from .util import load_config

@click.group('util')
@click.option('-c', '--config', type=click.Path(), default='./simulation_config.json', help='Configuration file to use, default: "simulation_config.json"')
@click.pass_context
def cli(ctx, config):
    config_path = os.path.abspath(os.path.expanduser(config)).replace("\\","/")

    ctx.obj["config"] = config_path

    if not os.path.exists(config_path):
        click.echo(colored.red("Config file not found: " + config))

def check_neuron_installed(confirm=True):
    try:
        import neuron
    except ModuleNotFoundError as e:
        print("Error: Python NEURON was not found.")
        if not confirm or not questionary.confirm("Do you want to continue anyway? ").ask():
            return False
    return True

@cli.command('celltune', help="Plot cell positions for a given set of populations")
@click.option('--hoc-folder', type=click.STRING, default=None, help="override the default cell picker from the simulation config hoc location")
@click.option('--mod-folder', type=click.STRING, default=None, help="override the default simulation config mod file location")
@click.option('--title',type=click.STRING,default="NEURON Single Cell Configurator Generated by BMTools (written by Tyler Banks)")
@click.pass_context
def cell_tune(ctx,hoc_folder,mod_folder,title):#, title, populations, group_by, save_file):
    #plot_3d_positions(config=ctx.obj['config'],
    #                title=title,
    #                populations=populations,
    #                group_by=group_by,
    #                save_file=save_file)
    #if ctx.obj['display']:
    #    plt.show()

    if not check_neuron_installed():
        return

    from .neuron.celltuner import CellTunerGUI

    if not hoc_folder or not mod_folder:
        cfg = load_config(ctx.obj['config'])
        if not hoc_folder:
            hoc_folder = cfg['components']['templates_dir']
        if not mod_folder:
            mod_folder = cfg['components']['mechanisms_dir']
    
    ctg = CellTunerGUI(hoc_folder,mod_folder,title=title)
    hoc_templates = ctg.get_templates()
    
    # Cell selector
    hoc = questionary.select(
    "Select a cell:",
    choices=hoc_templates).ask()

    ctg.load_template(hoc)

    # Mode selector
    easy_mode = questionary.confirm("Use pre-built interface? (no for advanced mode) ").ask()

    # Section selector
    section_names = ctg.get_section_names()

    sections_selected = questionary.checkbox(
    'Select sections you want to configure (each will recieve a window):',
    choices=section_names).ask()

    # Display selector
    displays_available = ['Voltages', 'Currents', 'Conductances', 'FIR']
    inputs_available = ['Current Clamp', 'Spike Input']
    configuration_available = ['Parameter']

    #Do you want to select which currents to plot?
    ctg.show()
    return

if __name__ == "__main__":
    cli()